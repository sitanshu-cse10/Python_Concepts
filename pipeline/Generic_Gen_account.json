{
	"name": "Generic_Gen_account",
	"properties": {
		"activities": [
			{
				"name": "Copy_data_Gen",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": false,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DelimitedTextGeneric",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@activity('Config_lookUp').output.firstRow.container",
								"type": "Expression"
							},
							"path": {
								"value": "@activity('Config_lookUp').output.firstRow.path",
								"type": "Expression"
							},
							"compression_type": "None",
							"compression_level": "None",
							"column_delimiter": ",",
							"row_delimiter": "\\n",
							"encoding": "UTF-8",
							"escape_character": "\\",
							"quote_character": "\"",
							"first_row_as_header": true,
							"null_value": "n/a",
							"directory": {
								"value": "@activity('Config_lookUp').output.firstRow.directory",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet_Generic",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@activity('Config_lookUp').output.firstRow.container",
								"type": "Expression"
							},
							"path": {
								"value": "@activity('Config_lookUp').output.firstRow.target_file",
								"type": "Expression"
							},
							"directory": {
								"value": "@activity('Config_lookUp').output.firstRow.directory",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Config_lookUp",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "Config_Json",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Switch1",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@activity('Config_lookUp').output.firstRow.directory",
						"type": "Expression"
					},
					"cases": [],
					"defaultActivities": [
						{
							"name": "Execute Pipeline1",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitOnCompletion": true
							}
						}
					]
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Config_lookUp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "container",
					"value": {
						"value": "@activity('Config_lookUp').output.firstRow.container",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": []
			}
		],
		"parameters": {
			"container": {
				"type": "string"
			},
			"directory": {
				"type": "string"
			},
			"path": {
				"type": "string"
			}
		},
		"annotations": []
	}
}